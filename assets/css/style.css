/*@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@100&display=swap'); */
/* Works same way as the import in line 1 above but I prefer to use the one on line 3 cos the instructor used that in his video.
The pipe separator (|) is used here to tack on additional fonts e.g name of the font 'Exo' followed by ':', then the weights */
@import url('https://fonts.googleapis.com/css?family=Roboto:100,200,300,400,500,600,700|Exo:100,200,300,400,500,600,700');

/*----------------------------------------------Colours */

.bg-color-name-title {
    background-color: #676767;
}

.bg-color-three-reasons {
    background-color: #fff;
}

.bg-color-personal-info {
    background-color: #f4f4f4;
} 

.bg-color-work-history {
    background-color: #9b59b6;
}

.ui-menu-color-home {
    background-color: #e67e22;
}

.ui-menu-color-resume {
    background-color: #9b59b6;
}

.ui-menu-color-contact {
    background-color: #3498db;
}

.ui-menu-color-download {
    background-color: #525252;
}

/*----------------------------------------------Special paddings/margins/text */

h1,
h2, 
h3, 
h4 {
    margin: 0;
}

.uppercase {
    text-transform: uppercase;
}

.general-sub {
    font-family: "Exo", sans-serif;
    font-weight: 300;
    color:#fafafa;
}

.inline-block {
    display: inline-block;
}

/* We'll set our display to 'table' so we can specify its child columns i.e 'section-column' 
    as 'table cells' to ensure that the columns will remain equal height regardless of their content. */
.row-table {
    display: table;
}

.section-column {
    display: table-cell;
    padding: 0 30px 30px;
    float: none;
}

.history-heading,
.section-heading {
    font-family: "Exo", sans-serif;
    font-weight: 300;
    margin-top: 25px;
    margin-bottom: 40px;
}

/*----------------------------------------------Heading */

header {
    margin: 0;
}

.heading {
    margin-left: 50px;
}

.logo {
    background: url("../images/rosie.jpg");  /* We use '..' to come up out of the css directory, then go into the 'images' dir & we'll find 'rosie.jpg' file */
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover; /* This ensures that the image covers the container it's sitting in */
    min-height: 360px;
    transition: all .5s ease-in-out;
    -moz-transition: all .5s ease-in-out; /* Add vendor prefix to ensure it works across all browsers */
    -webkit-transition: all .5s ease-in-out; /* Add vendor prefix to ensure it works across all browsers */
}

.name {
    font-family: "Exo", sans-serif;
    font-weight: 100;
    font-size: 46px;
    margin-top: 50px;
    color: #fff;
}

.title {
    font-family: "Roboto", sans-serif;
    font-weight: 200;
    font-size: 28px;
    margin-top: 20px;
    margin-bottom: 90px;
    color: #fff;
}

.list-inline-item:not(:last-child) {
    margin: 0;
}

/* When we display items inline, the white space in our HTML file becommes visible as a 
single space between our items so to eliminate this, we use a css hack by adding a menucontainer
class to our <ul> & target this in our css by giving it a font-size of 0. This will close up the
gaps between our list items (li) */
.menucontainer {
    /* Setting our font-size to 0 means that all our items will have a font-size of 0 so we will
    no longer see them so we need to override this font-size and is done in the code block after
    this code block (i.e #nav li) */
    font-size: 0;  
}

/* This removes the margin at the bottom of our unordered list & makes our navigation items line 
   up properly with the bottom of the image */
#nav {
    margin: 0;
}

#nav li {
    font-size: 14px;
    padding: 0;
}

.menuitem {
    height: 120px;
    text-align: center;
    padding: 0;
}

.menuitem a {
    width: 100%;   /* This will make the entire area of this div clickable */
    text-decoration: none;
    color: #fff;
    height: 120px;
}

.menuitem a i {
    padding-top: 22px;  /* This will push the icons down a bit from the top of the <div> */
    /* We used the css rule of 'display: block' to make each fontawesome icon appear on a 
       line of its own since 'i' element is inline by default. */
    display: block; 
    color: #fafafa;
    font-size: 26px; 
}

.menuitem span {
    display: block; 
    width: 100%;  /* This will make it go the full width of its parent <div> */
    padding-top: 5px;
    text-align: center;
    text-transform: uppercase;
    font-size: 14px;
    font-weight: 300;
    letter-spacing: 2px;
}

/*----------------------------------------------Hover.css */

.hvr-sweep-to-bottom:before {
    background: rgba(0, 0, 0, 0.2);
    height: 120px;
}

/*----------------------------------------------footer */

footer {
    background-color: #525252;
    color: #fafafa;
    min-height: 120px; /* This means that the 'about us', 'download' & 'social' texts can grow beyond 120px but not below it */
    margin: 0;
}

.cv-pdf i {
    font-size: 18px;  /* By convention, it should be smaller than the font-size used in the menu item */
    color: #fafafa;
    text-align: center;
    padding-left: 5px;
    transition: all 0.35s ease-in-out;
    -moz-transition: all 0.35s ease-in-out;
    -webkit-transition: all 0.35s ease-in-out;
    -o-transition: all 0.35s ease-in-out;
}

.cv-pdf i:hover {
    color: #e84610;
}

.social-links {
    padding-bottom: 15px;
}

.social-links li a i {
    width: 32px; /* Setting the width & height to equal size (height & width) will make our icons square */
    height: 32px;
    padding: 12px 0;
    border-radius: 50%; /* Setting border-radius to 50% when an icon/image has equal size will give a circle  */
    font-size: 13px;
    line-height: 7px;
    text-align: center;
    color: #fafafa;
    background: #8f8f8f;
    transition: all 0.35s ease-in-out;
    -moz-transition: all 0.35s ease-in-out;
    -webkit-transition: all 0.35s ease-in-out;
    -o-transition: all 0.35s ease-in-out;
}

.social-links li a i:hover {
    background: #e84610;
}

#footer-details {
    padding: 20px;
}

/*----------------------------------------------Three Reasons */

.three-reasons-icon {
    font-size: 26px;
    color: #e67e22;
}

.three-reasons-heading {
    margin-bottom: 15px;
}

/*----------------------------------------------Personal Info */

.personal-info-item {
    margin-bottom: 20px;
    display: block;
    clear: both;  /* This will ensure no other item can appear at either side of it */
}

/* A <div> is a block level elememt by default so it starts & ends with a new line
    & occupies the maximum horizontal space available */
.personal-info-item .key,
.personal-info-item .value {
    padding-right: 8px;
    display: inline-block;  /* An inline-block allows us to put 2 divs side-by-side */
}

.personal-info-item .key p,
.personal-info-item .value p {
    margin: 0;
}

.personal-info-item .key {
    width: 30%;
    margin-right: 21px;
    padding-top: 2px;
    vertical-align: top; /* This rule will make the key hug the top of the <div> as much as possible */
}

.personal-info-item .key p {
    font-weight: 700;
}

.personal-info-item .value {
    position: relative;
    width: 60%;
}

/*----------------------------------------------Skills */

/* Here, we'll override the 'progress' class i.e the 'wrapper class provided by Bootstrap */
.progress {
    position: relative;
    height: 25px; /* Changing the height of a progress wrapper automatically changes the height of the bar inside */
    margin-bottom: 4px;
}

.progress-type {
/* We want the text label 'HTML/HTML5' to sit on top of the progress bar instead of the right & also to be positioned 
to the far left so to achieve these, we set the position to absolute i.e absolute child of a relative parent */
    position: absolute;
    left: 0px;  /* Setting the 'left' position to 0px will move the text label to the far left of the progress bar */
    font-weight: 400;
    padding: 3px 30px 2px 10px;
    color: #fafafa;
    background-color: rgba(25, 25, 25, 0.2);
}

.progress-section {
    margin: 40px 20px;
}

/*----------------------------------------------Work History */   

.history-heading {
    color: #fafafa;
    margin-bottom: 50px;
}

 /* This is the parent timeline-item style */
.timeline-item {   
    padding: 4em 2em 0em 2em;
    position: relative;  /* We used 'relative' here bcos we'll have some 'absolute' children that we want to style inside this timeline-item. */ 
    color: #fafafa;
    border-left: 1px solid;  /* This provides our vertical timeline effect */ 
}

.timeline-item p {
    padding: 0;
    margin: 0;
}

/* We'll use 'before' pseudo element to target the 'data-dates' attribute using the 'content' property.
   We can only use 'content' with 'before or after' pseudo elements. This will set the content that will appear 
   either before or after the class in question. Here, we will set the content to use the attr() function with the data-dates
   in it so the content will be our dates. */
.timeline-item:before { /* the 'before' pseudo element provides our dates */
    content: attr(data-dates);
    position: absolute; /* This is set to 'absolute' so we can give it a left & top positions to bring it above our employers text.*/
    left: 2.5em;
    top: 3em;
    display: block;
    font-family: "Exo", sans-serif;
    font-weight: 500;
    font-size: 0.8em;
    padding: 0;
    margin: 0;
}

/* The 'after' pseudo element will create a little disk, like a node or circle on the timeline to represent Christie's work history */
.timeline-item:after { /* the 'after' pseudo element provides our little circular nodes */
    width: 12px;  /* Setting width & height to be equal makes the element have a shape of square */
    height: 12px;
    border-radius: 12px; /* This will turn the square to circle. We can either set the border radius to same size of width & height or use 50% */
    display: block;
    top: 2.4em;
    position: absolute; /* Since we want the circle to be inside our relative parent i.e 'timeline-item' */
    left: -6px; /* This will drag it out to the left slightly & make it sit centrally on our timeline border */
    content: '';    /* We set this to an empty string so that nothing else can appear in there */
    background: #fafafa;
}

.history-items {
    margin-bottom: 30px;
}
